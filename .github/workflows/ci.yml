# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.13, 2.13.4]
        java: [adopt@1.11, adopt@1.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Check formatting
        run: sbt ++${{ matrix.scala }} scalafmtCheckAll scalafmtSbtCheck

      - name: Check headers
        run: sbt ++${{ matrix.scala }} headerCheckAll

      - name: Compile
        run: 'sbt ++${{ matrix.scala }} test:compile'

      - name: Check binary compatibility
        run: sbt ++${{ matrix.scala }} core/mimaReportBinaryIssues

      - name: Check unused and undeclared compile dependencies
        run: sbt ++${{ matrix.scala }} unusedCompileDependenciesTest undeclaredCompileDependenciesTest

      - name: Run tests
        run: sbt ++${{ matrix.scala }} test

      - name: Build docs
        run: sbt ++${{ matrix.scala }} doc

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.13]
        java: [adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Import signing key
        run: echo $PGP_SECRET | base64 -d | gpg --import

      - run: sbt ++${{ matrix.scala }} release

      - name: Publish docs
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SBT_GHPAGES_COMMIT_MESSAGE: 'Updated site: sha=${{ github.sha }} build=${{ github.run_id }}'
        run: |

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          git config --global user.name "GitHub Actions CI"
          git config --global user.email "ghactions@invalid"
          sbt ++${{ matrix.scala }} docs/ghpagesPushSite
                       